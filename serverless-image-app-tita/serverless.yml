# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: 1upbaws2025
# "service" is the name of this project. This will also be added to your AWS resource names.
service: serverless-image-app-tita

package:
  exclude:
    - config.json
    - package.json
    - package-lock.json
    - README.md
    - serverless.yml
    - .gitignore
    - node_modules/**
    - nodejs/**
    - layer_content.zip
provider:
  name: aws
  runtime: nodejs20.x
  region: ${file(config.json):AWS_REGION}
  environment:
    BUCKET_NAME: ${file(config.json):S3_IMAGE_BUCKET}
    TABLE_NAME: ${file(config.json):DYNAMODB_TABLE_NAME}

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - s3:*
        - rekognition:DetectLabels
      Resource:
        - arn:aws:s3:::${file(config.json):S3_IMAGE_BUCKET}
        - arn:aws:s3:::${file(config.json):S3_IMAGE_BUCKET}/*
    - Effect: "Allow"
      Action:
        - rekognition:DetectLabels
      Resource: "*"
    - Effect: "Allow"
      Action: 
        - dynamodb:PutItem
      Resource: "*"

functions:
  titaGetSignedUrl:
    handler: src/handler.getSignedUrl
    layers: 
      - { Ref: TitaDependenciesLambdaLayer }
    events:
      - httpApi:
          path: /signed-url
          method: get
  processImage:
    handler: src/recognize.processImage
    layers: 
      - { Ref: TitaDependenciesLambdaLayer }
    events:
      - s3:
          bucket: ${self:provider.environment.BUCKET_NAME}
          event: s3:ObjectCreated:Put
          existing: true
layers:
  titaDependencies:
    name: 'tita-serverless-dependencies'
    compatibleRuntimes:
      - "nodejs20.x"
    package:
      artifact: layer_content.zip

resources:
  Resources:
    UploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.BUCKET_NAME}
        CorsConfiguration:
          CorsRules:
            - AllowedMethods:
                - PUT
                - POST
                - GET
                - DELETE
              AllowedOrigins:
                - "*"
              AllowedHeaders:
                - "*"
              MaxAge: 3000
    ImageTagsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: image
            AttributeType: S
        KeySchema:
          - AttributeName: image
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

